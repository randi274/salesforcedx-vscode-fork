name: Publish Beta Release to Github Only

on: 
  workflow_dispatch:

jobs:
  save_artifacts:
    name: 'Build VSIX Files'
    runs-on: ubuntu-latest

    steps:
      - uses: actions/setup-node@v1
        with:
          node-version: '16.13.x'
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.ref }}
      - name: Create and Package Extensions
        run: |
          npm install -g lerna
          npm install
          npm run compile
          npm run vscode:package
      - name: Stage Artifacts
        run: |
          mkdir extensions
          find packages -name "*.vsix" -type f -exec cp {} ./extensions \;
      - name: Upload Extensions
        uses: actions/upload-artifact@v3
        with:
          name: VS Code Extensions
          path: ./extensions/
  
  get_release_variables:
    name: 'Get Release Environment Variables'
    runs-on: ubuntu-latest
    outputs:
      RELEASE_VERSION: ${{ steps.getVersion.outputs.version }}
    steps: 
      - uses: actions/checkout@v3
      - id: getVersion
        run: echo "::set-output name=version::"$(node -pe "require('./packages/salesforcedx-vscode/package.json').version")""
      - run: echo "Release Version is ${{ steps.getVersion.outputs.version }}"

  create_git_tag:
    name: 'Create and Tag Beta Release'
    runs-on: ubuntu-latest
    needs: [save_artifacts, get_release_variables]
    env:
      VERSION: ${{needs.get_release_variables.outputs.RELEASE_VERSION}}

    steps:
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@v3
        id: download
        with:
          name: VS Code Extensions
          path: tmp/saved-extensions
      - uses: ./.github/actions/gitConfig
        with:
          email: ${{ secrets.GH_EMAIL }}
      - name: 'Create git tag to map to the Release Version'
        run: |
          git tag v${{env.VERSION}}
          git push origin v${{env.VERSION}}
      - name: Display structure of downloaded files
        run: ls -R
        working-directory: tmp/saved-extensions
      - name: 'Create Pre-Release and Attach VSIX Files'
        run: gh release create v${{env.VERSION}} **.vsix --title "Pre-Release v${{env.VERSION}}" --prerelease
        #add back: --notes-file ./packages/salesforcedx-vscode/CHANGELOG.md
        working-directory: tmp/saved-extensions
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}